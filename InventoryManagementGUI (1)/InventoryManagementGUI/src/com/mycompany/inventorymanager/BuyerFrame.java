package com.mycompany.inventorymanager;

import javax.swing.JOptionPane;
import javax.swing.JFrame;
/**
 *
 * @author qasem
 */
public class BuyerFrame extends javax.swing.JFrame {
    private Order order;
    private InventoryMangment inventory;
    

    /**
     * Creates new form BuyerFrame
     */
    public BuyerFrame() {
        initComponents();
        this.order= new Order();
        this.inventory= new InventoryMangment();
        setTitle("Buyer Dashboard");
        setLocationRelativeTo(null);
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addToOrderButton = new javax.swing.JButton();
        removeFromOrderButton = new javax.swing.JButton();
        viewMyOrderButton = new javax.swing.JButton();
        confirmOrderButton = new javax.swing.JButton();
        cancelOrderButton = new javax.swing.JButton();
        orderSummaryButton = new javax.swing.JButton();
        previousPageButton = new javax.swing.JButton();
        exitApplicationButton = new javax.swing.JButton();
        whatExactlyDoYouWantToDoLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        addToOrderButton.setIcon(new javax.swing.ImageIcon("C:\\Users\\LENOVO V15\\Downloads\\icons8-add-pulsar-color\\icons8-add-96.png")); // NOI18N
        addToOrderButton.setText("Add To Order");
        addToOrderButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addToOrderButtonActionPerformed(evt);
            }
        });

        removeFromOrderButton.setIcon(new javax.swing.ImageIcon("C:\\Users\\LENOVO V15\\Downloads\\remove-from-cart.png")); // NOI18N
        removeFromOrderButton.setText("Remove From Order");
        removeFromOrderButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeFromOrderButtonActionPerformed(evt);
            }
        });

        viewMyOrderButton.setIcon(new javax.swing.ImageIcon("C:\\Users\\LENOVO V15\\Downloads\\icons8-purchase-order-96.png")); // NOI18N
        viewMyOrderButton.setText("View My Order");
        viewMyOrderButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewMyOrderButtonActionPerformed(evt);
            }
        });

        confirmOrderButton.setIcon(new javax.swing.ImageIcon("C:\\Users\\LENOVO V15\\Downloads\\received.png")); // NOI18N
        confirmOrderButton.setText("Confirm Order");
        confirmOrderButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmOrderButtonActionPerformed(evt);
            }
        });

        cancelOrderButton.setIcon(new javax.swing.ImageIcon("C:\\Users\\LENOVO V15\\Downloads\\icons8-clear-shopping-cart-96.png")); // NOI18N
        cancelOrderButton.setText("Cancel Order");
        cancelOrderButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelOrderButtonActionPerformed(evt);
            }
        });

        orderSummaryButton.setIcon(new javax.swing.ImageIcon("C:\\Users\\LENOVO V15\\Downloads\\shopping-list.png")); // NOI18N
        orderSummaryButton.setText("Order Summary");
        orderSummaryButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orderSummaryButtonActionPerformed(evt);
            }
        });

        previousPageButton.setIcon(new javax.swing.ImageIcon("C:\\Users\\LENOVO V15\\Downloads\\right-arrow.png")); // NOI18N
        previousPageButton.setText("Previous Page");
        previousPageButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                previousPageButtonActionPerformed(evt);
            }
        });

        exitApplicationButton.setIcon(new javax.swing.ImageIcon("C:\\Users\\LENOVO V15\\Downloads\\logout.png")); // NOI18N
        exitApplicationButton.setText("Exit Application");
        exitApplicationButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitApplicationButtonActionPerformed(evt);
            }
        });

        whatExactlyDoYouWantToDoLabel.setFont(new java.awt.Font("SimSun-ExtB", 1, 24)); // NOI18N
        whatExactlyDoYouWantToDoLabel.setText("What Exactly Do You Want To Do ?");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(79, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(whatExactlyDoYouWantToDoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 420, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(55, 55, 55))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(viewMyOrderButton, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(158, 158, 158))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(cancelOrderButton)
                        .addGap(161, 161, 161))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(previousPageButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(exitApplicationButton))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(orderSummaryButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(removeFromOrderButton))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(addToOrderButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(confirmOrderButton)))
                .addGap(22, 22, 22))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {confirmOrderButton, exitApplicationButton, orderSummaryButton, previousPageButton, removeFromOrderButton});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {cancelOrderButton, viewMyOrderButton});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(whatExactlyDoYouWantToDoLabel)
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(confirmOrderButton, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(addToOrderButton, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(viewMyOrderButton, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(removeFromOrderButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(orderSummaryButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cancelOrderButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(previousPageButton)
                    .addComponent(exitApplicationButton))
                .addGap(10, 10, 10))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {cancelOrderButton, confirmOrderButton, exitApplicationButton, previousPageButton, removeFromOrderButton, viewMyOrderButton});

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addToOrderButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addToOrderButtonActionPerformed
        // TODO add your handling code here:
        String[] options = {"Keyboard (0)", "Mouse (1)", "Screen (2)"};
        int choice = JOptionPane.showOptionDialog(this,
            "Select product to add:",
            "Add Product", 
            JOptionPane.DEFAULT_OPTION,
            JOptionPane.QUESTION_MESSAGE,
            null,
            options,
            options[0]);
    
        if (choice >= 0) {
            Product product = inventory.getProductname(choice);
            if (product.getQuantity() > 0) {
                order.addProduct(product);
                product.setQuantity(product.getQuantity() - 1);
                JOptionPane.showMessageDialog(this,
                    "Added " + product.getName() + " to order",
                    "Success",
                    JOptionPane.INFORMATION_MESSAGE);
            }
            else {
                JOptionPane.showMessageDialog(this,
                    product.getName() + " is out of stock!",
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_addToOrderButtonActionPerformed

    private void removeFromOrderButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeFromOrderButtonActionPerformed
        // TODO add your handling code here:
        String[] options = {"Keyboard (0)", "Mouse (1)", "Screen (2)"};
        int choice = JOptionPane.showOptionDialog(this,
            "Select product to remove:",
            "Remove Product",
            JOptionPane.DEFAULT_OPTION,
            JOptionPane.QUESTION_MESSAGE,
            null,
            options,
            options[0]);

        if (choice >= 0) {
            Product product = inventory.getProductname(choice);
            int initialQuantity = product.getQuantity();
        
            order.removeProduct(product);
            product.setQuantity(product.getQuantity() + 1);
        
            if (product.getQuantity() > initialQuantity) {
                JOptionPane.showMessageDialog(this,
                    "Removed " + product.getName() + " from order",
                    "Success",
                    JOptionPane.INFORMATION_MESSAGE);
            }
            else {
                JOptionPane.showMessageDialog(this,
                    "Failed to remove product from order",
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_removeFromOrderButtonActionPerformed

    private void viewMyOrderButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewMyOrderButtonActionPerformed
        // TODO add your handling code here:
        // Assuming this prints to console
        order.getOrderedProducts(); 
        JOptionPane.showMessageDialog(this,
            "Check console for order details",
            "Order Contents",
            JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_viewMyOrderButtonActionPerformed

    private void confirmOrderButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmOrderButtonActionPerformed
        // TODO add your handling code here:
        order.confirmOrder();
        JOptionPane.showMessageDialog(this,
            "Order confirmed!",
            "Success",
            JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_confirmOrderButtonActionPerformed

    private void cancelOrderButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelOrderButtonActionPerformed
        // TODO add your handling code here:
        int confirm = JOptionPane.showConfirmDialog(this,
            "Are you sure you want to cancel the entire order?",
            "Confirm Cancellation",
            JOptionPane.YES_NO_OPTION);
    
        if (confirm == JOptionPane.YES_OPTION) {
            order.cancelOrder();
            JOptionPane.showMessageDialog(this,
                "Order canceled",
                "Success",
                JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_cancelOrderButtonActionPerformed

    private void orderSummaryButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orderSummaryButtonActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(this,
            order.toString(),
            "Order Summary",
            JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_orderSummaryButtonActionPerformed

    private void previousPageButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_previousPageButtonActionPerformed
        // TODO add your handling code here:
        this.dispose();
        new MainFrame().setVisible(true);
    }//GEN-LAST:event_previousPageButtonActionPerformed

    private void exitApplicationButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitApplicationButtonActionPerformed
        // TODO add your handling code here:
        int confirm = JOptionPane.showConfirmDialog(this,
            "Are you sure you want to exit?",
            "Confirm Exit",
            JOptionPane.YES_NO_OPTION);
    
        if (confirm == JOptionPane.YES_OPTION) {
            System.exit(0);
        }
    }//GEN-LAST:event_exitApplicationButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BuyerFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BuyerFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BuyerFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BuyerFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BuyerFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addToOrderButton;
    private javax.swing.JButton cancelOrderButton;
    private javax.swing.JButton confirmOrderButton;
    private javax.swing.JButton exitApplicationButton;
    private javax.swing.JButton orderSummaryButton;
    private javax.swing.JButton previousPageButton;
    private javax.swing.JButton removeFromOrderButton;
    private javax.swing.JButton viewMyOrderButton;
    private javax.swing.JLabel whatExactlyDoYouWantToDoLabel;
    // End of variables declaration//GEN-END:variables
}
