package com.mycompany.inventorymanager;

import javax.swing.JOptionPane;
import javax.swing.JFrame;
/**
 *
 * @author qasem
 */
public class ManagerFrame extends javax.swing.JFrame {
    private InventoryMangment inventory;

    /**
     * Creates new form ManagerFrame
     */
    public ManagerFrame() {
        initComponents();
        this.inventory= new InventoryMangment();
        setTitle("Manager Dashboard - Inventory Management System");
        setLocationRelativeTo(null); // Center window
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE); // Better than EXIT_ON_CLOSE
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addProductButton = new javax.swing.JButton();
        removeProductButton = new javax.swing.JButton();
        updateProductButton = new javax.swing.JButton();
        findProductButton = new javax.swing.JButton();
        listAllProductsButton = new javax.swing.JButton();
        exitApplicationButton = new javax.swing.JButton();
        previousPageButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        addProductButton.setIcon(new javax.swing.ImageIcon("C:\\Users\\LENOVO V15\\Downloads\\icons8-add-pulsar-color\\icons8-add-96.png")); // NOI18N
        addProductButton.setText("Add Product");
        addProductButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addProductButtonActionPerformed(evt);
            }
        });

        removeProductButton.setIcon(new javax.swing.ImageIcon("C:\\Users\\LENOVO V15\\Downloads\\remove.png")); // NOI18N
        removeProductButton.setText("Remove Product");
        removeProductButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeProductButtonActionPerformed(evt);
            }
        });

        updateProductButton.setIcon(new javax.swing.ImageIcon("C:\\Users\\LENOVO V15\\Downloads\\edit.png")); // NOI18N
        updateProductButton.setText("Update Product");
        updateProductButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateProductButtonActionPerformed(evt);
            }
        });

        findProductButton.setIcon(new javax.swing.ImageIcon("C:\\Users\\LENOVO V15\\Downloads\\serch.png")); // NOI18N
        findProductButton.setText("Find Product");
        findProductButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findProductButtonActionPerformed(evt);
            }
        });

        listAllProductsButton.setIcon(new javax.swing.ImageIcon("C:\\Users\\LENOVO V15\\Downloads\\list.png")); // NOI18N
        listAllProductsButton.setText("List All Products");
        listAllProductsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listAllProductsButtonActionPerformed(evt);
            }
        });

        exitApplicationButton.setIcon(new javax.swing.ImageIcon("C:\\Users\\LENOVO V15\\Downloads\\logout.png")); // NOI18N
        exitApplicationButton.setText("Exit Application");
        exitApplicationButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitApplicationButtonActionPerformed(evt);
            }
        });

        previousPageButton.setIcon(new javax.swing.ImageIcon("C:\\Users\\LENOVO V15\\Downloads\\right-arrow.png")); // NOI18N
        previousPageButton.setText("Previous Page");
        previousPageButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                previousPageButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(206, 206, 206)
                        .addComponent(updateProductButton)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(addProductButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(findProductButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(previousPageButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 185, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(removeProductButton, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(listAllProductsButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 199, Short.MAX_VALUE)
                            .addComponent(exitApplicationButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {addProductButton, removeProductButton});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(removeProductButton)
                    .addComponent(addProductButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(updateProductButton)
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(findProductButton)
                    .addComponent(listAllProductsButton))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(previousPageButton)
                    .addComponent(exitApplicationButton))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {addProductButton, exitApplicationButton, findProductButton, listAllProductsButton, previousPageButton, removeProductButton, updateProductButton});

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addProductButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addProductButtonActionPerformed
        // TODO add your handling code here:
        String[] options = {"Keyboard (0)", "Mouse (1)", "Screen (2)"};
        int choice = JOptionPane.showOptionDialog(this,
            "Select product type to add:",
            "Add Product",
            JOptionPane.DEFAULT_OPTION,
            JOptionPane.QUESTION_MESSAGE,
            null,
            options,
            options[0]);
    
        if (choice >= 0) {
            inventory.addProduct(choice);
            JOptionPane.showMessageDialog(this,
                "Added 1 " + options[choice] + " to inventory",
                "Success",
                JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_addProductButtonActionPerformed

    private void removeProductButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeProductButtonActionPerformed
        // TODO add your handling code here:
        String[] options = {"Keyboard (0)", "Mouse (1)", "Screen (2)"};
        int choice = JOptionPane.showOptionDialog(this,
            "Select product type to remove:",
            "Remove Product",
            JOptionPane.DEFAULT_OPTION,
            JOptionPane.QUESTION_MESSAGE,
            null,
            options,
            options[0]);

        if (choice >= 0) {
            // Get current quantity before attempting removal
            int currentQuantity = inventory.getProductname(choice).getQuantity();
        
            // Attempt removal
            inventory.removeProduct(choice);
        
            // Check if quantity actually changed
            int newQuantity = inventory.getProductname(choice).getQuantity();
        
            if (newQuantity < currentQuantity) {
                JOptionPane.showMessageDialog(this,
                    "Removed 1 " + options[choice] + " from inventory",
                    "Success",
                    JOptionPane.INFORMATION_MESSAGE);
            }
            else {
                JOptionPane.showMessageDialog(this,
                    "Cannot remove " + options[choice] + " - quantity is already 0!",
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_removeProductButtonActionPerformed

    private void updateProductButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateProductButtonActionPerformed
        // TODO add your handling code here:
        String[] options = {"Keyboard (0)", "Mouse (1)", "Screen (2)"};
        int productChoice = JOptionPane.showOptionDialog(this,
            "Select product to update:",
            "Update Product",
            JOptionPane.DEFAULT_OPTION,
            JOptionPane.QUESTION_MESSAGE,
            null,
            options,
            options[0]);
    
        if (productChoice >= 0) {
            String[] attributes = {"Quantity", "Price"};
            int attrChoice = JOptionPane.showOptionDialog(this,
                "What to update?",
                "Select Attribute",
                JOptionPane.DEFAULT_OPTION,
                JOptionPane.QUESTION_MESSAGE,
                null,
                attributes,
                attributes[0]);
        
            if (attrChoice >= 0) {
                Product p = inventory.getProductname(productChoice);
                String currentValue = (attrChoice == 0) 
                    ? String.valueOf(p.getQuantity())
                    : String.valueOf(p.getPrice());
            
                String newValue = JOptionPane.showInputDialog(this,
                    "Current " + attributes[attrChoice] + ": " + currentValue + 
                    "\nEnter new value:");
            
                if (newValue != null && !newValue.isEmpty()) {
                    try {
                        if (attrChoice == 0) {
                            p.setQuantity(Integer.parseInt(newValue));
                        }
                        else {
                            p.setPrice(Double.parseDouble(newValue));
                        }
                        JOptionPane.showMessageDialog(this,
                            "Update successful!",
                            "Success",
                            JOptionPane.INFORMATION_MESSAGE);
                    }
                    catch (NumberFormatException e) {
                        JOptionPane.showMessageDialog(this,
                            "Invalid number format!",
                            "Error",
                            JOptionPane.ERROR_MESSAGE);
                    }
                }
            }
        }
    }//GEN-LAST:event_updateProductButtonActionPerformed

    private void findProductButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_findProductButtonActionPerformed
        // TODO add your handling code here:
        String[] searchOptions = {"By ID", "By Name"};
        int searchType = JOptionPane.showOptionDialog(this,
            "Search by:",
            "Find Product",
            JOptionPane.DEFAULT_OPTION,
            JOptionPane.QUESTION_MESSAGE,
            null,
            searchOptions,
            searchOptions[0]);
    
        if (searchType >= 0) {
            String searchTerm = JOptionPane.showInputDialog(this,
                "Enter product " + (searchType == 0 ? "ID" : "name") + ":");
        
            if (searchTerm != null && !searchTerm.isEmpty()) {
                StringBuilder result = new StringBuilder();
                for (int i = 0; i < 3; i++) {
                    Product p = inventory.getProductname(i);
                    boolean match = (searchType == 0) 
                        ? p.getID().equalsIgnoreCase(searchTerm)
                        : p.getName().equalsIgnoreCase(searchTerm);
                
                    if (match) {
                        result.append("Found:\n")
                              .append("ID: ").append(p.getID()).append("\n")
                              .append("Name: ").append(p.getName()).append("\n")
                              .append("Category: ").append(p.getCategory()).append("\n")
                              .append("Quantity: ").append(p.getQuantity()).append("\n")
                              .append("Price: $").append(p.getPrice()).append("\n");
                        break;
                    }
                }
            
                if (result.length() == 0) {
                    result.append("No matching product found!");
                }
            
                JOptionPane.showMessageDialog(this,
                    result.toString(),
                    "Search Results",
                    JOptionPane.INFORMATION_MESSAGE);
            }
        }
    }//GEN-LAST:event_findProductButtonActionPerformed

    private void listAllProductsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listAllProductsButtonActionPerformed
        // TODO add your handling code here:
        StringBuilder sb = new StringBuilder("Current Inventory:\n\n");
        for (int i = 0; i < 3; i++) {
            Product p = inventory.getProductname(i);
            sb.append(p.getName()).append(" (ID: ").append(p.getID()).append(")\n")
              .append("Category: ").append(p.getCategory()).append("\n")
              .append("Quantity: ").append(p.getQuantity()).append("\n")
              .append("Price: $").append(p.getPrice()).append("\n\n");
        }
    
        JOptionPane.showMessageDialog(this,
            sb.toString(),
            "All Products",
            JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_listAllProductsButtonActionPerformed

    private void previousPageButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_previousPageButtonActionPerformed
        // TODO add your handling code here:
        this.dispose();
        new MainFrame().setVisible(true);                                               
                                                 

    }//GEN-LAST:event_previousPageButtonActionPerformed

    private void exitApplicationButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitApplicationButtonActionPerformed
        // TODO add your handling code here:
        int confirm = JOptionPane.showConfirmDialog(this,
            "Are you sure you want to exit?",
            "Confirm Exit",
            JOptionPane.YES_NO_OPTION);
    
        if (confirm == JOptionPane.YES_OPTION) {
            System.exit(0);
        }
    }//GEN-LAST:event_exitApplicationButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManagerFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManagerFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManagerFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManagerFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ManagerFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addProductButton;
    private javax.swing.JButton exitApplicationButton;
    private javax.swing.JButton findProductButton;
    private javax.swing.JButton listAllProductsButton;
    private javax.swing.JButton previousPageButton;
    private javax.swing.JButton removeProductButton;
    private javax.swing.JButton updateProductButton;
    // End of variables declaration//GEN-END:variables
}
